<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="13" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-02T18:29:15 CDT" name="Loan Department" finished-at="2023-08-02T18:29:15 CDT" duration-ms="147">
    <groups>
      <group name="Smoke">
        <method signature="Day2.plan()[pri:0, instance:test.Day2@79e4c792]" name="plan" class="test.Day2"/>
        <method signature="Day3.WebLoginCarLoan()[pri:0, instance:test.Day3@312aa7c]" name="WebLoginCarLoan" class="test.Day3"/>
        <method signature="Day4.plan()[pri:0, instance:test.Day4@536f2a7e]" name="plan" class="test.Day4"/>
        <method signature="Day2.plan()[pri:0, instance:test.Day2@4a8355dd]" name="plan" class="test.Day2"/>
        <method signature="Day3.MobileSiginCarLoan()[pri:0, instance:test.Day3@312aa7c]" name="MobileSiginCarLoan" class="test.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-08-02T18:29:15 CDT" name="Personal Loan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="91">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@3a7442c7]" started-at="2023-08-02T18:29:15 CDT" name="Demo" finished-at="2023-08-02T18:29:15 CDT" duration-ms="22" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.Day1.Demo(Day1.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Day1@3a7442c7]" started-at="2023-08-02T18:29:15 CDT" name="lastExecution" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequisite(java.lang.String)[pri:0, instance:test.Day2@79e4c792]" started-at="2023-08-02T18:29:15 CDT" name="prerequisite" finished-at="2023-08-02T18:29:15 CDT" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="befClass()[pri:0, instance:test.Day2@79e4c792]" started-at="2023-08-02T18:29:15 CDT" name="befClass" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befClass -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:test.Day2@79e4c792]" started-at="2023-08-02T18:29:15 CDT" name="beforeEveryMethod" finished-at="2023-08-02T18:29:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="plan()[pri:0, instance:test.Day2@79e4c792]" started-at="2023-08-02T18:29:15 CDT" name="plan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- plan -->
        <test-method is-config="true" signature="afClass()[pri:0, instance:test.Day2@79e4c792]" started-at="2023-08-02T18:29:15 CDT" name="afClass" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afClass -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Day2@79e4c792]" started-at="2023-08-02T18:29:15 CDT" name="lastExecution" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.Day2 -->
    </test> <!-- Personal Loan -->
    <test started-at="2023-08-02T18:29:15 CDT" name="Car Loan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="147">
      <class name="test.Day2">
        <test-method is-config="true" signature="befSuite()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="befSuite" finished-at="2023-08-02T18:29:15 CDT" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befSuite -->
        <test-method is-config="true" signature="prerequisite(java.lang.String)[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="prerequisite" finished-at="2023-08-02T18:29:15 CDT" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method is-config="true" signature="befClass()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="befClass" finished-at="2023-08-02T18:29:15 CDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befClass -->
        <test-method is-config="true" signature="beforeEveryMethod()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="beforeEveryMethod" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEveryMethod -->
        <test-method signature="plan()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="plan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- plan -->
        <test-method is-config="true" signature="afClass()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="afClass" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afClass -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="lastExecution" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
        <test-method is-config="true" signature="afSuite()[pri:0, instance:test.Day2@4a8355dd]" started-at="2023-08-02T18:29:15 CDT" name="afSuite" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- test.Day2 -->
      <class name="test.Day3">
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-08-02T18:29:15 CDT" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstSetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-08-02T18:29:15 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondSetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="MobileLoginCarLoan" data-provider="getData" finished-at="2023-08-02T18:29:15 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdSetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginCarLoan -->
        <test-method signature="MobileLoginHome()[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="MobileLoginHome" finished-at="2023-08-02T18:29:15 CDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHome -->
        <test-method signature="WebLoginCarLoan()[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="WebLoginCarLoan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarLoan -->
        <test-method signature="WebLoginHome(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="WebLoginHome" finished-at="2023-08-02T18:29:15 CDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456987]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHome -->
        <test-method signature="LoginAPIHome()[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="LoginAPIHome" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHome -->
        <test-method signature="MobileSiginCarLoan()[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="MobileSiginCarLoan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSiginCarLoan -->
        <test-method signature="MobileSigoutCarLoan()[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="MobileSigoutCarLoan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileSigoutCarLoan -->
        <test-method signature="APICarLoan()[pri:0, instance:test.Day3@312aa7c]" started-at="2023-08-02T18:29:15 CDT" name="APICarLoan" finished-at="2023-08-02T18:29:15 CDT" depends-on-methods="test.Day3.MobileLoginHome, test.Day3.WebLoginHome" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APICarLoan -->
      </class> <!-- test.Day3 -->
      <class name="test.Day4">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.Day4@536f2a7e]" started-at="2023-08-02T18:29:15 CDT" name="prerequisite" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="plan()[pri:0, instance:test.Day4@536f2a7e]" started-at="2023-08-02T18:29:15 CDT" name="plan" finished-at="2023-08-02T18:29:15 CDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- plan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
